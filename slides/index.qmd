---
title: "proPower: Prospective power analyses for frequentist regression models"
author: "Dr Stefano Coretta"
institute: "University of Edinburgh"
date: "2025/03/26"
format: 
  mono-light-revealjs:
    theme: [default, "custom.scss"]
    history: false
    fig-align: center
filters:
  - tachyonsextra
execute: 
  echo: false
  fig-align: center
bibliography: references.bib
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
theme_set(theme_light())
library(simr)
```

## Frequentist statistics

::: box-note
-   *P*-values: $P(d|H)$, probability of the difference $d$ (or a more extreme one) given the hypothesis $H$.

-   Neyman-Pearson NHST:

    -   $H$ is the "null hypothesis", to be rejected.

    -   $\alpha$ level: $p \ge \alpha$ non-significant difference, $p < \alpha$ significant difference.

    -   $\beta$ level: statistical power, probability of detecting a significant difference when there is one.

-   Null Ritual [@gigerenzer2004; @gigerenzer2004a; @gigerenzer2018]:

    -   $H$ is a "nil hypothesis": $d = 0$, to be rejected.

    -   $\alpha = 0.05$

    -   $\beta = 0.8$
:::

## Statistical power

::: box-tip
-   Statistical power ($\beta$ level) is affected by sample size.

-   One must determine the sample size needed to achieve the desired statistical power. In Null Ritualistic statistics this is 0.8 (or 80% power).

-   Prospective power analysis.
:::

. . .

::: box-note
Two examples

-   Effect of consonant voicing on vowel duration in mono- vs disyllabic words.

-   Accuracy in a lexical decision task to investigate shallow morphological representation in L2 speakers.
:::

## Example 1: vowel duration

::: box-note
-   Data from @coretta2019f, @coretta2019i.

-   "Voicing effect" in Manchester English.

-   Mono- and di-syllabic nonce words in frame sentences.

-   Is the voicing effect the same or different in mono- vs disyllabic words?
:::

. . .

::: box-tip
-   Use "pilot" data to determine sample size.
:::

## Example 1: the data

```{r}
#| label: eng-s
#| echo: true

library(tidyverse)

eng_s <- readRDS("data/eng_s.rds")
eng_s |> select(speaker, num_syl, word, voicing, v1_duration, speech_rate_c)
```

## Effect of voicing on vowel duration

```{r}
#| label: eng-s-plot

set.seed(67398)
eng_s |> 
  ggplot(aes(voicing, v1_duration)) +
  geom_jitter(width = 0.2, alpha = 0.5) +
  stat_summary(fun.data = "mean_cl_boot", colour = "darkorange") +
  facet_grid(cols = vars(num_syl)) +
  labs(
    x = "C voicing", y = "Vowel duration (ms)"
  )
```

## Prospective power analysis: overview

::: box-tip
1.  Determine Smallest Meaningful Effect Size (SMES).

2.  Run regression model on pilot or simulated data.

3.  Extend model with `simr::extend()` and set coefficient to SMES.

4.  Run power calculation with `simr::powerCurve()`.
:::

## Smallest Meaningful Effect Size

::: box-note
-   The minimum standard deviation for measurements of vowel duration is between 2 to 5 ms [@allen1978].

-   @nowak2006 finds an effect of voicing of 4.5 ms.

-   Let's use an SMES of 5 ms. What does this correspond to as a difference ratio?
:::

## Smallest Meaningful Effect Size (ratios)

```{r}
#| label: smes
#| echo: true
#| output-location: column
#| fig-width: 4

x <- seq(50, 300, by = 10)
y <- x + 5

ggplot() +
  aes(x, y/x) +
  geom_point(size = 2) +
  labs(
    x = "Vowel duration",
    y = "Difference ratio"
  )

```

## Run regression model

```{r}
#| label: dur-lm
#| echo: true

dur_lm <- lmer(
  log(v1_duration) ~
    voicing + num_syl + voicing:num_syl + speech_rate_c +
    (voicing | speaker),
  data = eng_s
)

summary(dur_lm)
```

## Extend model and set SMES

```{r}
#| label: extend
#| echo: true

dur_lm_ext <- extend(dur_lm, along = "speaker", n = 20)

fixef(dur_lm_ext)["voicingvoiced:num_sylmono"] <- 0.03
fixef(dur_lm_ext)
```

## Run power analysis

```{r}
#| label: power-code
#| echo: true
#| eval: false

library(simr)

dur_lm_pow <- powerCurve(
  dur_lm_ext,
  fixed("voicing:num_syl"),
  along = "speaker",
  breaks = c(50, 70, 100)
)

print(dur_lm_pow)

```

```{r}
#| label: power

dur_lm_pow <- readRDS("cache/dur_lm_pow.rds")
print(dur_lm_pow)

```

## Power curve plot

```{r}
#| label: power-curve
#| echo: true
#| fig-width: 5
#| fig-align: center

plot(dur_lm_pow)

```

## Example 2: accuracy

::: box-note
-   Data from @song2020.

-   Shallow morphological representation in L2 speakers.

-   **Lexical decision task**: Is the word a real English word or not?

-   **Priming paradigm**:

    -   **Prime**: *prolong* (unrelated), *unkind* (constituent), *kindness* (non-constituent).

    -   **Target**: *unkindness* (*\[un-kind\]-ness*, not *un-\[kind-ness\]*).

-   Constituent vs non-constituent accuracy in L2 speakers.
:::

## Example 2: the data

```{r}
#| label: shall
#| echo: true

shallow_s <- readRDS("data/shallow_s.rds")
shallow_s
```

## Accuracy by relation type

```{r}
#| label: shall-plot

shallow_s |> 
  ggplot(aes(Relation_type, fill = as.factor(ACC))) +
  geom_bar(position = "fill")
```

## Smallest Meaningful Effect Size (log-odds)

::: box-note
-   I have no idea...

-   Say -0.2 (log-odds).
:::

## Smallest Meaningful Effect Size (probability)

```{r}
#| label: prob-diff
x <- seq(-3, 3, by = 0.1)
a <- plogis(x)
b <- plogis(x - 0.2)
ab <- (b - a) * 100

ggplot() +
  aes(plogis(x), ab) +
  geom_point() +
  labs(x = "Baseline probability", y = "Probability difference (percentage points)")
```

## Run regression model

```{r}
#| label: sha-lm
#| echo: true

sha_lm <- glmer(
  ACC ~ Relation_type + (Relation_type | ID),
  family = binomial,
  data = shallow_s
)

summary(sha_lm)
```

## Run regression model II

```{r}
#| label: sha-lm-2
#| echo: true

sha_lm_2 <- glmer(
  ACC ~ Relation_type + (1 | ID),
  family = binomial,
  data = shallow_s
)

summary(sha_lm_2)
```

## Run power analysis

```{r}
#| label: sha-pow-code
#| eval: false
#| echo: true

sha_lm_ext <- extend(sha_lm_2), along = "ID", n = 1000)
fixef(sha_lm_ext)["Relation_typeNonConstituent"] <- -0.2

sha_lm_pow <- powerCurve(sha_lm_ext, fixed("Relation_typeNonConstituent"), along = "ID")
print(sha_lm_pow)
```

```{r}
#| label: sha-pow
#| echo: false

sha_lm_pow <- readRDS("cache/sha_lm_pow.rds")
print(sha_lm_pow)
```

## Power curve plot

```{r}
#| label: sha-pow-curve
#| echo: true
plot(sha_lm_pow)
```

## Summary

::: box-note
1.  Determine Smallest Meaningful Effect Size (SMES).

2.  Run regression model on pilot or simulated data.

3.  Extend model with `simr::extend()` and set coefficient to SMES.

4.  Run power calculation with `simr::powerCurve()`.
:::

. . .

::: box-tip
**Questions?**
:::

## References

::: {#refs}
:::
